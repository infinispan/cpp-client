syntax = "proto2";
package sample_bank_account;

option java_package = "com.example.generated_by_protoc";
option java_outer_classname = "BankProtos";

/**
 * @Indexed
 * @TypeId(42)
 */
message User {

   /**
    * @Field(store = Store.YES)
    */
   required int32 id = 1 ;

   /**
    * @Field(store = Store.YES)
    * Unable to use int32 type. See HRCPP-302.    
    */
   repeated int32 accountIds = 2;

   /**
    * @Field(store = Store.YES)
    */
   required string name = 3 ;

   /**
    * @Field(store = Store.YES)
    */
   required string surname = 4 ;

   message Address {
      required string street = 1 ;
      required string postCode = 2 ;
      required int32 number = 3 ;
   }

   /**
    * @Field(store = Store.YES)
    */
   repeated Address addresses = 5;     //a repeated field cannot be marked required

   /**
    * @Field(store = Store.YES,  indexNullAs = "-1")
    */
   optional int32 age = 6;   // persisting age instead of birth date is not ideal but is ok for our sample code

   /* @TypeId(41) */
   enum Gender {
      MALE = 0;    //NOTE: It seems negative values are accepted too!
      FEMALE = 1;
   }

   /**
    * @Field(store = Store.YES)
    */
   optional Gender gender = 7;

   optional string notes = 8;
}

/**
 * @Indexed
 * @TypeId(43)
 */
message Account {

   /**
    * @Field(store = Store.YES)
    */
   required int32 id = 1 ;

   /**
    * @Field(store = Store.YES)
    */
   optional string description = 2 [default = "Checking account"];

   /**
    * @Field(store = Store.YES)
    */
   required fixed64 creationDate = 3;

   message Limits {
       optional double maxDailyLimit = 1;
       optional double maxTransactionLimit = 2; 
   }

   /**
    * @Field(store = Store.YES)
    */
   optional Limits limits = 4;

   /**
    * @Field(store = Store.YES)
    */
   repeated bytes blurb = 5;
}

/**
 * @Indexed
 * @TypeId(44) 
 */
message Transaction {

   /**
    * @Field(store = Store.YES)
    */
   required int32 id = 1 ;

   /**
    * @Field
    */
   optional string description = 2;
   
   /**
    * @Field(store = Store.YES, analyze = Analyze.YES)
    */
   optional string longDescription = 3;        

   /**
    * @Field(store = Store.YES)
    */
   required int32 accountId = 4 ;

   /**
    * @Field(store = Store.YES)
    */
   required fixed64 date = 5;  // there is no native Date type in protobuf so we have to store it as a long

   /**
    * @Field(store = Store.YES)
    */
   required double amount = 6; // how do I store a BigDecimal? maybe as a byte array ..

   /**
    * @Field(store = Store.YES)
    */
   required bool isDebit = 7;

   required bool isValid = 8;
}

/**
 *
 */
message int_array {
   repeated int32 theArray = 1;
}

/**
 *
 */
message user_list {
   repeated User theList = 1;
}

//todo demonstrate collection of 'any'
